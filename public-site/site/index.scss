---
# Front matter block, so Jekyll processes this file
---

/**
 * We are using a variation of ITCSS. This file includes reusable styles, and
 * is assumed included by all components, even if being tested in isolation.
 * Treat this as a global dependency. Component-specific styling should be in
 * the CSS files of the component itself, as a local dependency.
 *
 * In order, files are categorised thus:
 *
 * - settings: global settings; variables only
 * - generic: resets; applies to most of the DOM
 * - elements: bare HTML elements
 * - objects: OOCSS-style reusable concepts: layouts, mini-layouts, animations
 * - overrides: utility-based styles and browser overrides
 *
 * Note that the biggest section of ITCSS, "components", is not defined here.
 * Components are defined in React and styled in their own directory. Also
 * missing is "tools" (in ITCSS these are basically mixins, which we don't use
 * since we don't use a preprocessor). Finally, "trumps" has been renamed
 * "overrides", since it would otherwise hurt to see that name.
 *
 * @see https://www.creativebloq.com/web-design/manage-large-css-projects-itcss-101517528
 */


@import 'settings.globals';
@import 'settings.color';

{% include_relative _vendor/sanitize.css/sanitize.css %}

@import 'generic.reset';

@import 'elements.abbr';
@import 'elements.blockquote';
@import 'elements.code';
@import 'elements.fieldset';
@import 'elements.forms';
@import 'elements.h';
@import 'elements.html';
@import 'elements.kbd';
@import 'elements.links';
@import 'elements.lists';

@import 'objects.body-text';
@import 'objects.document';
@import 'objects.layouts';
@import 'objects.media';

@import 'components.header';
@import 'components.highlight';

{% include_relative _vendor/solarized-css/solarized-dark.css %}

@import 'components.dropdown-menu';
@import 'components.global-nav';
@import 'components.local-nav';
@import 'components.hero';
@import 'components.tumbleweed';
@import 'components.footer';
@import 'components.error-404';
