grafana:
  enabled: false

nameOverride: prometheus-operator

alertmanager:
  alertmanagerSpec:
    resources:
      requests:
        cpu: "100m" # Added to a default of 100m
        memory: "64Mi" # Added to a default of 25Mi

prometheusOperator:
  resources:
    requests:
      cpu: "50m"
      memory: "100Mi"

## Configuration for kube-state-metrics subchart
##
kube-state-metrics:
  extraArgs:
    - --metric-labels-allowlist=pods=[radix-app,radix-component],namespaces=[radix-app,radix-env]

prometheus:
  # service:
  #   targetPort: 4180
  prometheusSpec:
    # listenLocal: true
    # containers:
    #   - name: prometheus-oauth2-proxy
    #     image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.3
    #     imagePullPolicy: Always
    #     env:
    #     - name: OAUTH2_PROXY_EMAIL_DOMAINS
    #       value: "*"
    #     - name: OAUTH2_PROXY_HTTP_ADDRESS
    #       value: "http://:4180"
    #     - name: OAUTH2_PROXY_PASS_ACCESS_TOKEN
    #       value: "true"
    #     - name: OAUTH2_PROXY_PASS_BASIC_AUTH
    #       value: "false"
    #     - name: OAUTH2_PROXY_PROVIDER
    #       value: "azure"
    #     - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
    #       value: "true"
    #     - name: OAUTH2_PROXY_UPSTREAMS
    #       value: "http://0.0.0.0:9090"
    #     - name: OAUTH2_PROXY_CLIENT_ID
    #       valueFrom:
    #         configMapKeyRef:
    #           name: prometheus-oauth2-proxy-config
    #           key: OAUTH2_PROXY_CLIENT_ID
    #     - name: OAUTH2_PROXY_REDIRECT_URL
    #       valueFrom:
    #         configMapKeyRef:
    #           name: prometheus-oauth2-proxy-config
    #           key: OAUTH2_PROXY_REDIRECT_URL
    #     - name: OAUTH2_PROXY_CLIENT_SECRET
    #       valueFrom:
    #         secretKeyRef:
    #           name: prometheus-oauth2-proxy-secrets
    #           key: OAUTH2_PROXY_CLIENT_SECRET
    #     - name: OAUTH2_PROXY_COOKIE_SECRET
    #       valueFrom:
    #         secretKeyRef:
    #           name: prometheus-oauth2-proxy-secrets
    #           key: OAUTH2_PROXY_COOKIE_SECRET
    #     ports:
    #     - containerPort: 4180
    #       protocol: TCP
    resources:
      limits:
        memory: "16Gi" # Added to a default of 50m
      requests:
        cpu: "2" # Added to a default of 200m
        memory: "16Gi" # Added to a default of 50m
    retention: 30d
    serviceMonitorSelectorNilUsesHelmValues: false
    #serviceMonitorNamespaceSelector: {}
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: managed-premium-retain-nocache
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1024Gi
        #selector: {}
    additionalScrapeConfigs:
      # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
      # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name