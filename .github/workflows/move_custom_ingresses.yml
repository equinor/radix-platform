name: Move custom ingresses
on:
  workflow_call:
    inputs:
      DEST_CLUSTER:
        type: string
        required: true
        description: Current active cluster / destination cluster
      GH_ENVIRONMENT:
        type: string
        description: Secret environment

    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  moveCustomIngresses:
    name: Move Custom Ingresses Job
    runs-on: ubuntu-22.04
    environment: ${{ inputs.GH_ENVIRONMENT }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: equinor/radix-platform

      - name: Get GitHub Public IP
        id: github_public_ip
        run: echo "ipv4=$(curl 'https://ifconfig.me/ip')" >> $GITHUB_OUTPUT

      - name: Az CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Check clusters state
        run: |
          #!/usr/bin/env bash
          RADIX_ZONE_ENV=./scripts/radix-zone/radix_zone_dev.env

          if [[ ! -f "$RADIX_ZONE_ENV" ]]; then
            echo "ERROR: RADIX_ZONE_ENV=$RADIX_ZONE_ENV is invalid, the file does not exist." >&2
            exit 1
          fi
          source "$RADIX_ZONE_ENV"

          KV_SECRET_ACTIVE_CLUSTER="radix-flux-active-cluster-${RADIX_ZONE}"
          echo "KV_SECRET_ACTIVE_CLUSTER: $KV_SECRET_ACTIVE_CLUSTER"

          SOURCE_CLUSTER="$(az keyvault secret show --vault-name "${AZ_RESOURCE_KEYVAULT}" --name "${KV_SECRET_ACTIVE_CLUSTER}" | jq -r .value)"
          echo "SOURCE_CLUSTER: $SOURCE_CLUSTER"

          DEST_CLUSTER="${{ inputs.DEST_CLUSTER }}"
          echo "DEST_CLUSTER: $DEST_CLUSTER"

          SOURCE_CLUSTER_POWER_STATE="$(az aks show --name "${SOURCE_CLUSTER}" --resource-group "${AZ_RESOURCE_GROUP_CLUSTERS}" --query powerState -otsv)"
          echo "SOURCE_CLUSTER_POWER_STATE: $SOURCE_CLUSTER_POWER_STATE"

          DEST_CLUSTER_POWER_STATE="$(az aks show --name "${DEST_CLUSTER}" --resource-group "${AZ_RESOURCE_GROUP_CLUSTERS}" --query powerState -otsv)"
          echo "DEST_CLUSTER_POWER_STATE: $DEST_CLUSTER_POWER_STATE"

          if [[ $SOURCE_CLUSTER_POWER_STATE != "Running" ]]; then
            echo "$SOURCE_CLUSTER is not in running state"
            exit 1
          fi

          if [[ $DEST_CLUSTER_POWER_STATE != "Running" ]]; then
            echo "$DEST_CLUSTER is not in running state"
            exit 1
          fi

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Setup kubelogin
        uses: azure/use-kubelogin@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          kubelogin-version: 'latest'

      - name: Setup Flux
        uses: fluxcd/flux2/action@main

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v4
        with:
          resource-group: 'clusters'
          cluster-name: ${{ inputs.DEST_CLUSTER }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: compare active cluster
        run: |
          RADIX_ZONE_ENV=./scripts/radix-zone/radix_zone_dev.env DEST_CLUSTER=${{ inputs.DEST_CLUSTER }} GITHUB_PUBLIC_IP=${{ steps.github_public_ip.outputs.ipv4 }} .github/workflows/scripts/compare_active_cluster.sh
