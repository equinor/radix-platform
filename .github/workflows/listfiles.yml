name: List files
on:
  pull_request:
    types: [labeled, opened, synchronize, reopened]
jobs:
  Get_radix_environment:
    if: contains(github.event.pull_request.labels.*.name, 'deploy')
    name: Get radix environment
    runs-on: ubuntu-latest
    outputs:
      radix_environment: ${{ steps.radix_environment.outputs.radix_environment }}
    steps:
      - id: radix_environment
        # Set radix_environment based on label
        run: |
          labels="$(echo '${{ toJson(github.event.pull_request.labels.*.name) }}' | jq -c)"
          if [[ "$(echo "$labels" | jq -e '. | any(. == "dev")')" == true ]]; then
            echo "radix_environment=dev" >> $GITHUB_OUTPUT
          elif [[ "$(echo "$labels" | jq -e '. | any(. == "prod")')" == true ]]; then
            echo "radix_environment=prod" >> $GITHUB_OUTPUT
          else
            echo "radix_environment=dev" >> $GITHUB_OUTPUT            
          fi
  List_files:
    needs: Get_radix_environment
    name: List files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.file_list }}
    env:
      path: terraform/clusters/${{ needs.Get_radix_environment.outputs.radix_environment }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "file_list=$(ls ${{ env.path }} | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  Terraform:
    needs: [List_files, Get_radix_environment]
    name: Terraform
    uses: ./.github/workflows/terraform.yml
    strategy:
      matrix:
        filename: ${{ fromJson(needs.List_files.outputs.matrix) }}
    with:
      cluster_name: ${{ matrix.filename }}
      environment: operations
      radix_environment: ${{ needs.Get_radix_environment.outputs.radix_environment }}
      terraform_version: ~1.3.0
      working_directory: terraform/clusters/${{ needs.Get_radix_environment.outputs.radix_environment }}/${{ matrix.filename }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
