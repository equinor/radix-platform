name: List files
on:
  push:
    branches:
      - master
    paths:
      - "terraform/clusters/**"
  pull_request:
    types: [labeled, opened, synchronize, reopened]
jobs:
  Get_radix_environment:
    if: contains(github.event.pull_request.labels.*.name, 'deploy') || github.event_name == 'push'
    name: Get radix environment
    runs-on: ubuntu-latest
    outputs:
      radix_environment: ${{ steps.set-matrix.outputs.radix_environment }}
    env:
      path: terraform/clusters
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "radix_environment=$(ls ${{ env.path }} | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  List_files:
    needs: Get_radix_environment
    name: List files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        radix_environment: ${{ fromJson(needs.Get_radix_environment.outputs.radix_environment) }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.file_list }}
    env:
      path: terraform/clusters/${{ matrix.radix_environment }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "file_list=$(ls ${{ env.path }} | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  Terraform:
    needs: [List_files, Get_radix_environment]
    name: Terraform
    uses: ./.github/workflows/terraform.yml
    strategy:
      matrix:
        filename: ${{ fromJson(needs.List_files.outputs.matrix) }}
        radix_environment: ${{ fromJson(needs.Get_radix_environment.outputs.radix_environment) }}
    with:
      cluster_name: ${{ matrix.filename }}
      environment: operations
      radix_environment: ${{ matrix.radix_environment }}
      terraform_version: ~1.3.0
      working_directory: terraform/clusters/${{ matrix.radix_environment }}/${{ matrix.filename }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
