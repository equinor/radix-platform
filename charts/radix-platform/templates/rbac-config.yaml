apiVersion: v1
kind: ServiceAccount
metadata:
  name: tiller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: tiller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: radix-cluster-admins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: "{{ .Values.radixAdminGroup }}"
---
# SECRURE SOLUTION for usergroup fg_radix_platform_users
# limited access to list namespaces and create radixregistrations.
# Radix operator grants other accesses when creating radix registration or radix applications.
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   labels:
#     group: fg_radix_platform_user
#   name: radix-platform-user
# rules:
# - apiGroups:
#   - radix.equinor.com
#   resources:
#   - radixregistrations
#   verbs:
#   - create
# - apiGroups:
#   - ""
#   resources:
#   - namespaces
#   verbs:
#   - list
#   - watch
# UNSECURE SOLUTION for usergroup fg_radix_platform_users
# grants access to list radixregistrations, radixconfig, secrets, pods and ns for users in fg_radix_platform_user ad group
# radix web portal and brigade term works with these settings
# does NOT secure the kubernetes cluster, since listing also include get yaml def (therefore secrets).
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    group: fg_radix_platform_user
  name: radix-platform-user
rules:
- apiGroups:
  - radix.equinor.com
  resources:
  - radixregistrations
  verbs:
  - list
  - watch
  - create
- apiGroups:
  - radix.equinor.com
  resources:
  - radixapplications
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    group: radix-platform-user
  name: radix-platform-user-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: radix-platform-user
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: "{{ .Values.radixAdminGroup }}"
