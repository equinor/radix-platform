imageCredentials:
  registry: xx
  username: xx
  password: xx

externalDns:
  enabled: true
  environment: dev
  deploymentTargetName: xx
  imageTag: "v0.5.7"

# radix-e2e-monitoring child chart
radix-e2e-monitoring:
  enabled: true

  # radix-e2e-monitoring chart values:
  clusterFQDN: "xx"
  influxDBurl: "xx"

# radix-kubernetes-api-proxy child chart
radix-kubernetes-api-proxy:
  enabled: true

  # radix-kubernetes-api-proxy chart values:
  clusterFQDN: "change-me"

radixClusterAdminGroup: "604bad73-c53b-4a95-ab17-d7953f75c8c3" # "fg_radix_platform_development"
radixUserGroup: "7552642f-ad75-4e9d-a140-3ab8f3742c16"

# kubed child chart
kubed:
  enabled: true

  # kubed chart values:
  apiserver:
    enabled: false
  config:
    clusterName: xx
  rbac:
    create: true
  enableAnalytics: false

# nginx-ingress child chart
nginx-ingress:
  enabled: true

  # nginx-ingress chart values:
  controller:
    publishService:
      enabled: true
    stats:
      enabled: true
    metrics:
      enabled: true
    service:
      enableHttp: false
    externalTrafficPolicy: "Local"
    config:
      # Log format documented here: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/log-format.md
      log-format-upstream: '$namespace $ingress_name $service_name $service_port - $the_real_ip - [$the_real_ip] - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id'
    podAnnotations:
      fluentbit.io/parser: "nginx-ingress-full"

# Connected to nginx-ingress
createIngressServiceMonitor: true

# Connected to cert-manager, but cannot use cert-manager values because helm templating does not handle dashes in variable names very well
createClusterIssuer: true

clusterWildcardCert:
  enabled: true
  environment: xx
  clusterName: xx

certManagerAzureDnsSecret: xx

# kube-prometheus child chart
# Disable the grafana that is bundled with kube-prometheus via requirements.yaml
deployGrafana: false

kube-prometheus:
  enabled: true
  
  # kube-prometheus chart values
  prometheus:
    image:
      tag: v2.3.1
    retention: 31d
    # externalUrl: ""
    # routePrefix: /
    #remoteWrite:
    #- url: "https://[[influxDBUsername]]:[[influxDBPassword]]@radixinfluxdb.azurewebsites.net/api/v1/prom/write?db=influxdb"
    ingress:
      enabled: true
      hosts:
      - xx
      tls:
      - secretName: cluster-wildcard-tls-cert
        hosts:
          - xx
    storageSpec:
      volumeClaimTemplates:
      - metadata:
          name: prometheus-disk
        spec:
          accessModes:
          - ReadWriteOnce
          storageClassName: managed-premium-retain
          resources:
            requests:
              storage: 100Gi

# grafana child chart
grafana:
  enabled: true

  # grafana chart values
  image:
    repository: grafana/grafana
    tag: latest
    pullPolicy: Always

  ingress:
    enabled: true
    hosts:
    - xx
    tls:
    - secretName: cluster-wildcard-tls-cert
      hosts:
        - xx

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: prometheus
        type: prometheus
        url: http://radix-stage1-prometheus:9090
        access: proxy
        isDefault: true
        basicAuth: false

  env:
    GF_AUTH_GENERIC_OAUTH_CLIENT_ID: 7542f95d-c9f4-492f-8450-b3ef2286da7c
    GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
    GF_AUTH_ANONYMOUS_ENABLED: "false"
    GF_AUTH_GENERIC_OAUTH_NAME: Azure AD
    GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
    GF_AUTH_GENERIC_OAUTH_SCOPES: openid email name
    GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/oauth2/authorize
    GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/oauth2/token
    GF_DATABASE_TYPE: mysql
    GF_DATABASE_SSL_MODE: "skip-verify"
    GF_DATABASE_CA_CERT_PATH: /etc/ssl/certs/ca-certificates.crt
    GF_DATABASE_HOST: radix-dev-grafana.mysql.database.azure.com
    GF_DATABASE_NAME: grafana
    GF_DATABASE_USER: "mysqlAdmin@radix-dev-grafana"
    GF_USERS_AUTO_ASSIGN_ORG_ROLE: "Editor" # Viewer|Editor|Admin
    GF_SERVER_ROOT_URL: xx

  envFromSecret: grafana-secret-envs
  
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
