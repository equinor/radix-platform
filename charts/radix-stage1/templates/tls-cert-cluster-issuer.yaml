{{- if .Values.createClusterIssuer -}}

apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app: radix-platform
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: sov@equinor.com
    privateKeySecretRef:
      name: letsencrypt-prod
    dns01:
      providers:
      - name: azure-dns
        azuredns:
          clientID: "{{ .Values.azureDNS.clientId }}" # The appId of the dns service principal which can access the az dns zone in the environment (prod, dev, ...) where the cluster is hosted. Ex: az ad sp show --id http://radix-dns-dev --query appId
          clientSecretSecretRef:
            key: client-secret
            name: azuredns-credentials
          hostedZoneName: "{{ .Values.externalDns.zoneName }}"
          resourceGroupName: "{{ .Values.azureDNS.resourceGroup }}"
          subscriptionID: "{{ .Values.azureDNS.subscriptionID }}" # The id of the subscription that controls the az dns zone. Ex: az account show -s "Omnia Radix Development" --query id
          tenantID: "{{ .Values.azureDNS.tenantID }}" # The id of the tenant which host the dns service principal. Ex: az ad sp show --id http://radix-dns-dev --query appOwnerTenantId
        
{{- end -}}