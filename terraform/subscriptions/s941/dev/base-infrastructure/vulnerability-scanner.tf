# MS SQL Server
module "mssql-database_vulnerability_scan" {
  source                        = "../../../modules/mssqldatabase"
  env                           = module.config.environment
  database_name                 = "radix-vulnerability-scan"
  server_name                   = "sql-radix-vulnerability-scan-${module.config.environment}"
  managed_identity_admin_name   = "radix-id-vulnerability-scan-admin-${module.config.environment}"
  audit_storageaccount_name     = module.config.log_storageaccount_name
  admin_adgroup                 = data.azuread_group.sql_admin.display_name
  azuread_authentication_only   = true
  rg_name                       = module.resourcegroup_vulnerability_scan.data.name
  vnet_resource_group           = module.config.vnet_resource_group
  common_resource_group         = module.config.common_resource_group
  location                      = module.config.location
  public_network_access_enabled = true
  zone_redundant                = false
  subscription                  = module.config.subscription

  admin_federated_credentials = {
    github-main = {
      issuer  = "https://token.actions.githubusercontent.com"
      subject = "repo:equinor/radix-vulnerability-scanner:ref:refs/heads/main"
    }
    github-release = {
      issuer  = "https://token.actions.githubusercontent.com"
      subject = "repo:equinor/radix-vulnerability-scanner:ref:refs/heads/release"
    }
    github-pr = {
      name    = "gh-radix-vulnerability-scan-acr-pr-${module.config.environment}"
      issuer  = "https://token.actions.githubusercontent.com"
      subject = "repo:equinor/radix-vulnerability-scanner:pull_request"
    }
  }
}

module "github-workload-vulnerability_scan-id" {
  source              = "../../../modules/userassignedidentity"
  name                = "radix-id-vulnerability-scan-github-${module.config.environment}"
  resource_group_name = module.resourcegroup_vulnerability_scan.data.name
  location            = module.resourcegroup_vulnerability_scan.data.location
  roleassignments = {
    contributor = {
      role     = "Contributor" # Needed to open firewall
      scope_id = module.acr.azurerm_container_registry_id
    },
  }
  federated_credentials = {
    github-main = {
      name    = "gh-radix-vulnerability-scan-acr-main-${module.config.environment}"
      issuer  = "https://token.actions.githubusercontent.com"
      subject = "repo:equinor/radix-vulnerability-scanner:ref:refs/heads/main"
    }
  }
}

module "mi-writer_vulnerability_scan" {
  source              = "../../../modules/userassignedidentity"
  name                = "radix-id-vulnerability-scan-writer-${module.config.environment}"
  resource_group_name = module.resourcegroup_vulnerability_scan.data.name
  location            = module.resourcegroup_vulnerability_scan.data.location

  roleassignments = {
    "acr" = {
      role     = "AcrPull"
      scope_id = module.acr.azurerm_container_registry_id
    }
  }
}

module "mi-reader_vulnerability_scan" {
  source              = "../../../modules/userassignedidentity"
  name                = "radix-id-vulnerability-scan-reader-${module.config.environment}"
  resource_group_name = module.resourcegroup_vulnerability_scan.data.name
  location            = module.resourcegroup_vulnerability_scan.data.location
}

# output "mi-client-id" {
#   value = module.mssql-database.mi-admin
# }
# output "github-buildpush-workflow" {
#   value = {
#     client-id = module.github-workload-id.client-id
#     name      = module.github-workload-id.name
#   }
# }
# output "mi-writer" {
#   value = {
#     client-id = module.mi-writer.client-id,
#     name      = module.mi-writer.name
#   }
# }
# output "mi-reader" {
#   value = {
#     client-id = module.mi-reader.client-id,
#     name      = module.mi-reader.name
#   }
# }
